#!/bin/bash

user_fetch(){
if grep ^simple_fetch $BUILDME_FILE >/dev/null 2>&1; then
	source $BUILDME_FILE
	if type simple_fetch > /dev/null 2>&1; then
		simple_fetch || return 1
	fi
fi
}


fetch_files(){

for CPV in ${USERLIST_TO_INSTALL[@]}; do
	get_variables "$CPV"

	BUILDME_FILE="$BUILDME_DIR/$CATEGORY/$PACKAGE/$PACKAGE-$VERSION$raw_patch.buildme"

	if [[ $(cat "$BUILDME_FILE") =~ $regexSRC_URL ]]; then
		shopt -s extglob # enable extended pattern matching
		v="${BASH_REMATCH[2]}"
		v="${v#"${v%%[![:space:]]*}"}"
		v="${v%"${v##*[![:space:]]}"}"
		shopt -u extglob
		while read -r LINE; do
			while [[ $LINE =~ \$(\{([a-zA-Z_][a-zA-Z_0-9]*)([^}]*?)\})(.*) ]]; do
				if [[ -z "${BASH_REMATCH[3]}" ]]; then
					NEW_LINE+="${LINE%$BASH_REMATCH}${!BASH_REMATCH[2]}"
				else
					k="${!BASH_REMATCH[2]}"
					NEW_LINE+="${LINE%$BASH_REMATCH}$(eval echo '${'${!k@}${BASH_REMATCH[3]}'}')"
					unset k
				fi
				LINE="${BASH_REMATCH[4]}"
			done
			SRC_URL+=("$NEW_LINE$LINE")
			unset LINE NEW_LINE
		done <<<"$v"
		unset v
	else
		echo -e "\e[31mSRC_URL is no difended in $BUILDME_FILE\e[0m"
		return 1
	fi

	if [[ $(cat "$BUILDME_FILE") =~ $regexMD5_SUM ]]; then
		shopt -s extglob
		while read -r v; do
			if [[ "$v" =~ ^\ *$ ]]; then
				# remove empty or only with spaces lines
				continue
			else
				v="${v#"${v%%[![:space:]]*}"}"
				v="${v%"${v##*[![:space:]]}"}"
				MD5_SUM+=("$v")
        	fi
		done <<<$"${BASH_REMATCH[2]}"
		shopt -s extglob
		unset v
	else
		echo -e "\e[31mMD5_SUM is no difended in $BUILDME_FILE\e[0m"
		return 1
	fi


	for url in "${SRC_URL[@]}"; do
		if [[ $(if_renamed_source) != 'true' ]]; then
			fan=$(echo "$url" | sed -r 's#.*\/([-_a-z0-9.]*)#\1#')
		else
			fan=$(echo "$url" | tr -s [:space:] ' ' | cut -d ' ' -f3)
		fi

		echo fan "$fan"

		if [ -f "$DISTDIR/$fan" ]; then
			echo -e "\e[96mFile $fan available\e[0m"

			dowloaded_md5_sum

			compare_md5_sum

			if [[ "$control_sum_correct" = 'true' ]]; then
				# dowloaded and control sum correct
				echo -e "\e[96mControl sum correct\e[0m"
			else
				# rm and download, then check sum again
				echo -e "\e[31mControl sum not corect. Trying refetch\e[0m"
				rm -- "$DISTDIR/$fan"

				try_fetch_source || return 1

				dowloaded_md5_sum

				compare_md5_sum

				if [[ "$control_sum_correct" = 'true' ]]; then
					# dowloaded and control sum correct
					echo -e "\e[96mControl sum correct\e[0m"
				else
					echo -e "\e[31mControl sum not corect\e[0m"
					return 1
        		fi
			fi
		else
			echo -e "\e[96mFile $fan is NOT available. Trying to download\e[0m"
			try_fetch_source || return 1

			dowloaded_md5_sum

			compare_md5_sum

			if [[ "$control_sum_correct" = 'true' ]]; then
				# dowloaded and control sum correct
				echo -e "\e[96mControl sum correct\e[0m"
			else
				echo -e "\e[31mControl sum not corect after fetch\e[0m"
				break
			fi
		fi
	unset file_sum file sum_correct control_sum_correct
	done

	#debug
	#debug_message "\e[96mFile have  $FILE_SUM\e[0m"
	#debug_message "\e[96mCorrect is $ORIG_SUM\e[0m"

	# to run on fetch phase from buildme
	user_fetch || { echo -e "\e[31m  * user_fetch failed\e[0m" && return 1; }


	unset FILE_SUM ORIG_SUM SRC_URL SRC_URL_RENAMED FILE_NAME
	unset CATEGORY PACKAGE VERSION category package raw_package ver_modif ver_sep version

done
}

source /usr/lib/simple/libsimple
source $SIMPLEBUILD_DIR/bashrc
cd $SIMPLEBUILD_DIR

fetch_files || { echo -e "\e[31m  * fetch_files failed\e[0m" && exit 1; }
