#!/bin/bash

setup_env(){
source /usr/lib/simple/libsimple
source /var/tmp/simple/bashrc
cd $SIMPLEBUILD_DIR
}

remove_files(){
echo -n -e "\e[96mRemoving $CATEGORY/$PACKAGE-$VERSION  \e[0m"

if [ -f /var/lib/pkg/"$CATEGORY"/"$PACKAGE"-"$VERSION"/CONTENT ]; then
	content_regex=$'(dir|otr|elf_32|elf_64|sym) ([^ \f\n\r\t\v]+).*'
	while read -r line; do
		if [[ "$line" =~ $content_regex ]]; then
			if [ "${BASH_REMATCH[1]}" = "dir" ]; then
				package_dirs="${BASH_REMATCH[2]} $package_dirs"
			else
				#echo "path of no-dir is ${BASH_REMATCH[2]}"
				rm -f -- "${BASH_REMATCH[2]}"
			fi
		else
			echo "content regex failed"
			return 1
		fi
	done </var/lib/pkg/"$CATEGORY"/"$PACKAGE"-"$VERSION"/CONTENT

	fhs_dirs=$(grep '^[^#]' /usr/lib/simple/fhs_dirs)

	for package_dir in $package_dirs; do
		#echo package_dir $package_dir

		if (shopt -s nullglob dotglob; f=("$package_dir"/*); ((! ${#f[@]}))); then
			matched_fhs=false
			for fhs_dir in $fhs_dirs; do
				if [ "$fhs_dir" = "$package_dir" ]; then
					#echo "matched for fhs"
					matched_fhs=true
				fi
			done

			if [ "$matched_fhs" = false ]; then
				#echo "no any match for fhs"
				rmdir -- "$package_dir" 2> /dev/null
			fi
		fi
	done

	rm -rf -- /var/lib/pkg/"$CATEGORY"/"$PACKAGE"-"$VERSION"
	rmdir --  /var/lib/pkg/"$CATEGORY" 2> /dev/null

	echo "Ok"

else
	echo "CONTENT file for $CPV is not exist"
	return 1
fi

}

run_post_remove(){
BUILDME_FILE=$BUILDME_DIR/$CATEGORY/$PACKAGE/$PACKAGE-$VERSION.buildme
source $BUILDME_FILE
if type simple_post_remove > /dev/null 2>&1 ; then
	echo -e "\e[96mRuning simple_post_remove\e[0m"
	simple_post_remove || { echo -e "\e[31m  * post_remove failed\e[0m" && return 1; }
	echo -e "\e[96mOk\e[0m"
fi
}

run_remove_files(){
for CPV in $REMOVE_LIST; do
	get_variables $CPV
	remove_files || { echo -e "\e[31m  * remove_files failed\e[0m" && return 1; }
	run_post_remove || { echo -e "\e[31m  * run_post_remove failed\e[0m" && return 1; }
done
}

setup_env || exit 1
run_remove_files || exit 1


