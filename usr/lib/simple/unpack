#!/bin/bash

user_unpack(){
if grep ^simple_unpack $BUILDME_FILE >/dev/null 2>&1; then
	echo -e "\e[96mRun simple_unpack() from buildme file\e[0m"
	source $BUILDME_FILE
	if type simple_unpack > /dev/null 2>&1; then
		simple_unpack || return 1
	fi
else
	echo -e "\e[96msimple_unpack() is not definded in buildme file"
fi
}

unpack_archives(){
cd -- "$SIMPLEBUILD_DIR"
source /usr/lib/simple/libsimple
CPV=$1
BUILDME_FILE="$BUILDME_DIR/$CATEGORY/$PACKAGE/$PACKAGE-$VERSION$raw_patch.buildme"
source "$BUILDME_FILE"

mkdir -p "$BROOT" || return 1
mkdir -p "$S" || return 1
mkdir -p "$D" || return 1
mkdir -p "$B" || return 1

for url in "$SRC_URL"; do
	if [[ $(if_renamed_source) != true ]]; then
		fan=$(echo "$url" | sed -r 's#.*\/([-_a-z0-9.]*)#\1#')
	else
		fan=$(echo "$url" | tr -s [:space:] ' ' | cut -d ' ' -f3)
	fi

	if [[ $(if_archive) = 'true' ]]; then
		echo -en "\e[96mUnpacking source for $fan ...  \e[0m"
		tar -xf "$DISTDIR/$fan" -C "$S" || return 1
		echo -e "\e[96mDONE \e[0m"
	else
		echo "$url is not archive. skeeping"
	fi

	unset fan
done

#check if source in directory or not
if [ -d "$BROOT/srcdir/$PACKAGE-$VERSION" ]; then
	S="$BROOT/srcdir/$PACKAGE-$VERSION"
else
	S="$BROOT"/srcdir
fi
}

add_environment(){

add_variable CATEGORY PACKAGE VERSION BUILDME_FILE BROOT S B D raw_patch

mkdir -p "$BROOT/varlog"
cp -- /var/tmp/simple/bashrc "$BROOT/varlog/variables"
print_variable >> "$BROOT/varlog/variables"
}

unpack_archives $1 || exit 1
user_unpack || exit 1
add_environment || exit 1
